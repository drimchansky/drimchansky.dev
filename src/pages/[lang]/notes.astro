---
import type { GetStaticPaths } from 'astro'

import { getCollection } from 'astro:content'

import Container from '@/components/container.astro'
import TypographyH1 from '@/components/typography/TypographyH1.astro'
import TypographyH2 from '@/components/typography/TypographyH2.astro'
import TypographyH3 from '@/components/typography/TypographyH3.astro'
import TypographySpan from '@/components/typography/TypographySpan.astro'
import { getLocale, t } from '@/i18n'
import BaseLayout from '@/layouts/base-layout.astro'
import { filterTestNotesCb } from '@/utils/functions/filterTestNotesCb'
import { prepareNotesList } from '@/utils/functions/prepareNotesList'

export const getStaticPaths = (async () => [
  { params: { lang: 'ru' } },
  { params: { lang: 'en' } }
]) satisfies GetStaticPaths

const locale = getLocale(Astro.currentLocale)
const notes = await getCollection('notes', entry => entry.slug.startsWith(`${locale}/`))
const notesGrouped = prepareNotesList(locale, notes.filter(filterTestNotesCb))

const monthDayFormatter = new Intl.DateTimeFormat(locale, { day: 'numeric', month: 'short' })
---

<BaseLayout title=`${t(Astro.currentLocale, 'notes')} â€“ ${t(Astro.currentLocale, 'fullName')}`>
  <Container class="notes-container">
    <TypographyH1>{t(Astro.currentLocale, 'notes')}</TypographyH1>

    {
      notesGrouped.map(([year, notes]) => {
        return (
          <>
            <TypographyH2 class="year-header">{year}</TypographyH2>

            <ul class="list">
              {notes.map(({ data, url }) => {
                return (
                  <li class="list-item">
                    <a class="link" href={url}>
                      <TypographyH3 class="note-header">
                        <TypographySpan>{data.title}</TypographySpan>
                        <TypographySpan class="note-date">
                          <time datetime={data.pubDate.toISOString()}>{monthDayFormatter.format(data.pubDate)}</time>
                        </TypographySpan>
                      </TypographyH3>
                    </a>
                  </li>
                )
              })}
            </ul>
          </>
        )
      })
    }
  </Container>
</BaseLayout>

<style>
  @import '@/styles/mixins.css';
  @import '@/styles/media.css';

  .notes-container {
    --max-width: var(--max-notes-text-width);

    padding-top: 3rem;
  }

  .year-header {
    padding: 2rem 0 0.5rem 0;
    border-bottom: 2px solid var(--c-header-line);
  }

  .list {
    padding: 0;
    margin: 0;
    margin-top: 0.5rem;

    list-style-type: none;
  }

  /* .list-item {
  } */

  .link {
    display: block;
    padding: 0.4rem 0;
    text-decoration: none;
    @mixin focus;
  }

  .note-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
  }

  .note-date {
    color: gray;
    font-size: var(--text-sm);
    line-height: var(--text-sm--line-height);
    text-wrap: nowrap;
  }
</style>
