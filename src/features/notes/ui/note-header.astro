---
import type { CollectionEntry } from 'astro:content'
import type { HTMLAttributes } from 'astro/types'

import { Icon } from 'astro-icon/components'
import { getRelativeLocaleUrl } from 'astro:i18n'

import { getLocale, t } from '@/shared/i18n'
import TypographyH1 from '@/shared/ui/typography/typography-h1.astro'
import TypographySpan from '@/shared/ui/typography/typography-span.astro'

interface Props extends HTMLAttributes<'header'> {
  note: CollectionEntry<'notes'>
}

const { class: className, note, ...props } = Astro.props

const locale = getLocale(Astro.currentLocale)
const dateFormatter = new Intl.DateTimeFormat(locale, { day: 'numeric', month: 'long', year: 'numeric' })
---

<header class:list={['note-header', className || '']} {...props}>
  <a class="note-header__back-link" href={getRelativeLocaleUrl(locale, '/notes')}>
    <Icon name="arrow-left" aria-hidden="true" />
    <TypographySpan>{t(Astro.currentLocale, 'backToNotes')}</TypographySpan>
  </a>

  <TypographyH1>{note.data.title}</TypographyH1>
  <TypographySpan class="note-header__meta">
    <time datetime={note.data.pubDate.toISOString()}>{dateFormatter.format(note.data.pubDate)}</time>
    {
      note.data.lastModified && (
        <span class="note-header__last-updated">
          {'('}last updated on{' '}
          <time datetime={note.data.lastModified.toISOString()}>
            {dateFormatter.format(note.data.lastModified) + ')'}
          </time>
        </span>
      )
    }
  </TypographySpan>
</header>

<style>
  @import '@/shared/styles/mixins.css';
  @import '@/shared/styles/media.css';

  .note-header {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;
  }

  .note-header__back-link {
    @mixin focus;

    display: flex;
    align-items: center;
    color: var(--c-text-primary);
    gap: 3px;
    text-decoration: none;
  }

  .note-header__meta {
    color: var(--c-text-gray);
    font-size: var(--text-sm);
    line-height: var(--text-sm--line-height);
  }

  .note-header__last-updated {
    background: var(--c-highlight);
    color: oklch(51.03% 0 0);
  }
</style>
