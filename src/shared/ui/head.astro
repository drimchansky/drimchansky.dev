---
import { ClientRouter } from 'astro:transitions'

import { CUSTOM_COVER_ROUTES } from '@/shared/constants'
import { getLocale, t } from '@/shared/i18n'

export type Props = {
  title: string
}

const { title } = Astro.props
const urlOrigin = process.env.SITE_URL

const locale = getLocale(Astro.currentLocale)
const pathname = Astro.url.pathname.replace(`/${locale}`, '')
const route = pathname.split('/')[1]

const cleanUrl = urlOrigin + pathname
const coverLink = `${urlOrigin}/covers/${CUSTOM_COVER_ROUTES.includes(route) ? route : 'main'}-${locale}.jpg`

const schema = JSON.stringify({
  '@context': 'https://schema.org',
  '@type': 'Person',
  description: t(Astro.currentLocale, 'siteDescription'),
  jobTitle: t(Astro.currentLocale, 'occupation'),
  name: t(Astro.currentLocale, 'fullName'),
  url: `https://drimchansky.dev/${Astro.currentLocale}`
})
---

<meta charset="UTF-8" />
<meta content={t(Astro.currentLocale, 'siteDescription')} name="description" />
<meta content="width=device-width, initial-scale=1.0" name="viewport" />
<meta content={Astro.generator} name="generator" />

<link href="/favicon.ico" rel="icon" sizes="32x32" />
<link href="/icon.svg" rel="icon" type="image/svg+xml" />
<link href="/apple-touch-icon.png" rel="apple-touch-icon" />
<link href="/manifest.webmanifest" rel="manifest" />
<meta content="#1B1B1B" name="theme-color" />

<link href="https://drimchansky.dev/" rel="canonical" />

<meta content="website" property="og:type" />
<meta content={title} property="og:title" />
<meta content={t(Astro.currentLocale, 'siteDescription')} property="og:description" />
<meta content={cleanUrl} property="og:url" />

<meta content={coverLink} property="og:image" />
<meta content="1200" property="og:image:width" />
<meta content="630" property="og:image:height" />

<meta content="summary_large_image" name="twitter:card" />
<meta content="@drimchansky" name="twitter:site" />

<link as="font" href="/fonts/Inter-Variable.woff2" rel="preload" type="font/woff2" crossorigin />
<link as="font" href="/fonts/EBGaramond-SemiBold.woff2" rel="preload" type="font/woff2" crossorigin />

<ClientRouter />

<title>{title}</title>

<script set:html={schema} type="application/ld+json" is:inline />

<script is:inline>
  // disable view transition for mobile to avoid glitch
  const mobile = matchMedia('(max-width: 768px)')
  document.addEventListener('astro:before-swap', ev => {
    if (mobile.matches && ev.viewTransition) {
      ev.viewTransition.skipTransition()
    }
  })
</script>

<script type="speculationrules" is:inline>
  {
    "prefetch": [
      {
        "where": {
          "selector_matches": "[data-prefetch='']"
        },
        "eagerness": "immediate"
      }
    ],
    "prerender": [
      {
        "where": {
          "selector_matches": "[data-prefetch='']"
        },
        "eagerness": "moderate"
      }
    ]
  }
</script>
