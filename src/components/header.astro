---
import Container from '@/components/container.astro'
import Hamburger from '@/components/hamburger.astro'
import Menu from '@/components/menu.astro'
import SkipLink from '@/components/skip-link.astro'
---

<SkipLink />

<header class="header" id="header" transition:animate="none">
  <Container class="header-container">
    <Menu id="menu" />
    <Hamburger aria-expanded="false" id="hamburger-button" />
  </Container>
</header>

<script>
  import type { FocusTrap } from 'focus-trap'
  import { createFocusTrap } from 'focus-trap'
  ;(() => {
    let focusTrap: FocusTrap

    const onPageLoaded = () => {
      const page = document.documentElement
      const header = document.getElementById('header')!
      const button = document.getElementById('hamburger-button')!
      const menu = document.getElementById('menu')!

      const menuMedia = matchMedia('(max-width: 767px)')
      focusTrap = createFocusTrap(header, { initialFocus: false })

      function isMenuOpened() {
        return button.getAttribute('aria-expanded') === 'true'
      }

      const openMenu = () => {
        page.classList.add('clip')

        button.setAttribute('aria-expanded', 'true')

        menu.classList.remove('menu-closed')
        setTimeout(() => menu.classList.add('menu-opened'), 20)

        focusTrap.activate()
      }

      const closeMenu = () => {
        page.classList.remove('clip')

        button.setAttribute('aria-expanded', 'false')

        menu.classList.remove('menu-opened')
        setTimeout(() => menu.classList.add('menu-closed'), 20)

        focusTrap.deactivate()
      }

      button.addEventListener('click', () => {
        isMenuOpened() ? closeMenu() : openMenu()
      })

      menuMedia.addEventListener('change', event => {
        if (!event.matches && isMenuOpened()) {
          closeMenu()
        }
      })
    }

    window.addEventListener('DOMContentLoaded', onPageLoaded)
    document.addEventListener('astro:after-swap', onPageLoaded)

    document.addEventListener('astro:before-swap', () => {
      focusTrap?.deactivate()
    })
  })()
</script>

<style>
  @import '../styles/media.css';

  .header {
    position: sticky;
    z-index: 1;
    top: 0;
    height: var(--header-height);
    border-bottom: var(--header-line-width) solid var(--c-header-line);
    background: var(--c-header-bg);
  }

  .header-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  @media print {
    .header {
      display: none;
    }
  }

  @media (--viewport-small) {
    .header-container {
      gap: 2rem;
    }
  }
</style>
